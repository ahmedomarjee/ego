version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          TEST_DATABASE_URL: postgres://root@localhost/circle_test

      - image: circleci/postgres:9.5

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Initialize DB with Schema
      - run:
          name: Install Postgres Client
          command: sudo apt install postgresql-client
      - run:
          name: Initialize DB from Schema
          command: |
            psql \
            -d $TEST_DATABASE_URL \
            -f ~/repo/src/main/resources/schemas/psql-schema.sql

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Fetch Dependencies
          command: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # Run Tests
      - run:
          name: Maven Test
          command: |
            mvn test \
            -D spring.profiles.active=psql \
            -D spring.datasource.username=root \
            -D spring.datasource.url=jdbc:postgresql://localhost:5432/circle_test

  deploy:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo

    steps:
      - checkout
      - add_ssh_keys

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Package Uber-Jar
          command: mvn package

      - run:
          name: Deploy Script
          command: ./.circleci/deploy.sh

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - *circleci-test

